{"version":3,"sources":["api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.js","index.js"],"names":["getTodos","fetch","then","response","json","getUser","userId","TodoList","todos","changeUser","changeInput","filterTodos","check","className","type","placeholder","onChange","event","target","value","name","map","todo","id","checked","completed","title","onClick","CurrentUser","user","onClear","email","phone","App","state","selectedUserId","todosCopy","componentDidMount","setState","data","componentDidUpdate","val","prevState","filter","includes","Number","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ae224da.chunk.js","sourcesContent":["const API_TODO_URL = 'https://mate-api.herokuapp.com/todos';\n\nexport const getTodos = () => (\n  fetch(API_TODO_URL)\n    .then(response => response.json())\n);\n\nexport const getUser = (userId) => (\n  fetch(`https://mate-api.herokuapp.com/users/${userId}`)\n    .then(response => response.json())\n);\n","import React from 'react';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, changeUser, changeInput, filterTodos, check }) => (\n  <div className=\"TodoList\">\n    <input\n      type=\"text\"\n      placeholder=\"Type search todo\"\n      onChange={(event) => {\n        changeInput(event.target.value)\n      }}\n    />\n    <select\n      className=\"filters\"\n      onChange={filterTodos}\n    >\n      <option\n        name=\"All\"\n      >\n        All\n      </option>\n      <option\n        name=\"Active\"\n      >\n        Active\n      </option>\n      <option\n        name=\"Completed\"\n      >\n        Completed\n      </option>\n    </select>\n    <h2>Todos:</h2>\n    <ul className=\"TodoList__list\">\n      {todos.map(todo=>(\n        <li className=\"TodoList__item\">\n          <p>ID : {todo.id}</p>\n          <label>\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              onChange={check}\n              id={todo.id}\n              value={todo.id}\n              checked={todo.completed}\n            />\n            {todo.title}\n          </label>\n          <button\n            type=\"button\"\n            onClick={()=>{changeUser(todo.userId)}}\n          >\n            User&nbsp;#{todo.userId}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import React from 'react';\n\nexport const CurrentUser = ({ user, onClear }) => (\n  <div className=\"CurrentUser\">\n    <h2>Selected user: {user.id}</h2>\n    <ul>\n      <li>{user.name}</li>\n      <li>{user.email}</li>\n      <li>{user.phone}</li>\n    </ul>\n    <button\n      type=\"button\"\n      onClick={onClear}\n    >\n      Clear\n    </button>\n  </div>\n)\n\n","import React from 'react';\nimport './App.scss';\nimport { getTodos, getUser } from './api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    user: [],\n    todosCopy: [],\n  };\n\n  componentDidMount = () => {\n    getTodos()\n      .then((todos) => {\n        this.setState({\n          todos: todos.data,\n          todosCopy: todos.data,\n        });\n      });\n  };\n\n  componentDidUpdate = () => {\n    if (this.state.selectedUserId !== 0\n      && this.state.selectedUserId !== this.state.user.id) {\n      getUser(this.state.selectedUserId)\n        .then((user) => {\n          this.setState({ user: user.data });\n        });\n    }\n  }\n\n  changeUser = (id) => {\n    this.setState({ selectedUserId: id });\n  }\n\n  changeInput = (val) => {\n    this.setState(prevState => ({\n      todosCopy: prevState.todos.filter(todo => (\n        todo.title\n          ? todo.title.includes(val)\n          : ''\n      )),\n    }));\n  }\n\n  check = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      todosCopy: prevState.todosCopy.map(todo => ((todo.id !== Number(value))\n        ? { ...todo }\n        : {\n          ...todo,\n          completed: !todo.completed,\n        })),\n    }));\n  }\n\n  onClear = () => {\n    this.setState({\n      user: '',\n      selectedUserId: 0,\n    });\n  }\n\n  filterTodos = (event) => {\n    switch (event.target.value) {\n      case 'All':\n        this.setState(state => ({\n          todosCopy: [...state.todos],\n        }));\n        break;\n      case 'Active':\n        this.setState(state => ({\n          todosCopy: [...state.todos.filter(todo => !todo.completed)],\n        }));\n        break;\n      case 'Completed':\n        this.setState(state => ({\n          todosCopy: [...state.todos.filter(todo => todo.completed)],\n        }));\n        break;\n      default:\n        return false;\n    }\n  }\n\n  render() {\n    const { todosCopy, selectedUserId, user } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todosCopy}\n            changeUser={this.changeUser}\n            changeInput={this.changeInput}\n            filterTodos={this.filterTodos}\n            check={this.check}\n          />\n        </div>\n        <div className=\"App__content\">\n          {selectedUserId ? (\n            <CurrentUser\n              user={user}\n              onClear={this.onClear}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}