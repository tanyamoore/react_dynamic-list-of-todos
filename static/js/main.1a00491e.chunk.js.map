{"version":3,"sources":["api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.js","index.js"],"names":["getTodos","fetch","then","response","json","getUser","userId","TodoList","todos","changeUser","changeInput","filterTodos","check","className","type","placeholder","onChange","event","target","value","name","map","todo","id","checked","completed","title","onClick","CurrentUser","user","onClear","selectedUserId","useState","us","setUs","useEffect","data","email","phone","App","state","todosCopy","componentDidMount","setState","componentDidUpdate","changeUserId","newUser","searchTodos","val","prevState","filter","includes","checkCompleted","Number","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a00491e.chunk.js","sourcesContent":["const API_TODO_URL = 'https://mate-api.herokuapp.com/todos';\n\nexport const getTodos = () => (\n  fetch(API_TODO_URL)\n    .then(response => response.json())\n);\n\nexport const getUser = userId => (\n  fetch(`https://mate-api.herokuapp.com/users/${userId}`)\n    .then(response => response.json())\n);\n","import React from 'react';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, changeUser, changeInput, filterTodos, check }) => (\n  <div className=\"TodoList\">\n    <input\n      type=\"text\"\n      placeholder=\"Type search todo\"\n      onChange={(event) => {\n        changeInput(event.target.value);\n      }}\n    />\n    <select\n      className=\"filters\"\n      onChange={filterTodos}\n    >\n      <option\n        name=\"All\"\n      >\n        All\n      </option>\n      <option\n        name=\"Active\"\n      >\n        Active\n      </option>\n      <option\n        name=\"Completed\"\n      >\n        Completed\n      </option>\n    </select>\n    <h2>Todos:</h2>\n    <ul className=\"TodoList__list\">\n      {todos.map(todo => (\n        <li className=\"TodoList__item\">\n          <p>\n            ID :\n            {todo.id}\n          </p>\n          <label>\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              onChange={check}\n              id={todo.id}\n              value={todo.id}\n              checked={todo.completed}\n            />\n            {todo.title}\n          </label>\n          <button\n            type=\"button\"\n            onClick={() => {\n              changeUser(todo.userId);\n            }}\n          >\n            User&nbsp;#\n            {todo.userId}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import React,{ useEffect, useState } from \"react\";\nimport {getUser} from '../../api';\n\nexport const CurrentUser = ({ user, onClear, selectedUserId, changeUser }) => {\n  const [us, setUs] = useState(user);\n  useEffect(() => {\n    if (selectedUserId !== 0\n      && selectedUserId !== user.id) {\n      getUser(selectedUserId)\n        .then((user) => {\n          changeUser( user.data );\n          setUs(user.data);\n        });\n    }\n  })\n  \n  return (\n    <div className=\"CurrentUser\">\n      <h2>\n        Selected user:\n        {us.id}\n      </h2>\n      <ul>\n        <li>{us.name}</li>\n        <li>{us.email}</li>\n        <li>{us.phone}</li>\n      </ul>\n      <button\n        type=\"button\"\n        onClick={onClear}\n      >\n        Clear\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport { getTodos, getUser } from './api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    user: [],\n    todosCopy: [],\n  };\n\n  componentDidMount = () => {\n    getTodos()\n      .then((todos) => {\n        this.setState({\n          todos: todos.data,\n          todosCopy: todos.data,\n        });\n      });\n  };\n\n  componentDidUpdate = () => {\n    if (this.state.selectedUserId !== 0\n      && this.state.selectedUserId !== this.state.user.id) {\n      getUser(this.state.selectedUserId)\n        .then((user) => {\n          this.setState({ user: user.data });\n        });\n    }\n  }\n\n  changeUserId = (id) => {\n    this.setState({ selectedUserId: id });\n  }\n\n  changeUser= (newUser) => {\n    this.setState({ user: newUser });\n  }\n\n  searchTodos = (val) => {\n    this.setState(prevState => ({\n      todosCopy: prevState.todos.filter(todo => (\n        todo.title\n          ? todo.title.includes(val)\n          : ''\n      )),\n    }));\n  }\n\n  checkCompleted = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      todosCopy: prevState.todosCopy.map(todo => ((todo.id !== Number(value))\n        ? { ...todo }\n        : {\n          ...todo,\n          completed: !todo.completed,\n        })),\n    }));\n  }\n\n  onClear = () => {\n    this.setState({\n      user: '',\n      selectedUserId: 0,\n    });\n  }\n\n  filterTodos = (event) => {\n    switch (event.target.value) {\n      case 'All':\n        this.setState(state => ({\n          todosCopy: [...state.todos],\n        }));\n        break;\n      case 'Active':\n        this.setState(state => ({\n          todosCopy: [...state.todos.filter(todo => !todo.completed)],\n        }));\n        break;\n      case 'Completed':\n        this.setState(state => ({\n          todosCopy: [...state.todos.filter(todo => todo.completed)],\n        }));\n        break;\n      default:\n        return false;\n    }\n  }\n\n  render() {\n    const { todosCopy, selectedUserId, user } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todosCopy}\n            changeUser={this.changeUserId}\n            changeInput={this.searchTodos}\n            filterTodos={this.filterTodos}\n            check={this.checkCompleted}\n          />\n        </div>\n        <div className=\"App__content\">\n          {selectedUserId ? (\n            <CurrentUser\n              user={user}\n              changeUser={this.changeUser}\n              selectedUserId={selectedUserId}\n              onClear={this.onClear}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}